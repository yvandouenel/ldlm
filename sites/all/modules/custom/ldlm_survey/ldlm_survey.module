<?php

/**
 * @file
 * Formulaires de satisfaction.
 */

include_once 'ldlm_survey.features.inc';

define('LDLM_SURVEY_STATUS_SCHEDULED', 0);
define('LDLM_SURVEY_STATUS_OPEN', 1);
define('LDLM_SURVEY_STATUS_CLOSED', 2);

/**
 * Implements hook_menu().
 */
function ldlm_survey_menu() {
  $items = [];

  $items['admin/content/survey'] = [
    'title' => 'Enquêtes de satisfaction',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => ['administer surveys'],
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
  ];
  $items['admin/content/survey/survey/add'] = [
    'title' => 'Ajouter un questionnaire',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ldlm_survey_survey_form'],
    'access arguments' => ['administer surveys'],
    'file' => 'ldlm_survey.survey.inc',
  ];
  $items['admin/content/survey/survey/%survey/edit'] = [
    'title' => 'Modifier un questionnaire',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ldlm_survey_survey_form', 4],
    'access arguments' => ['administer surveys'],
    'file' => 'ldlm_survey.survey.inc',
  ];
  $items['admin/content/survey/survey/%survey/delete'] = [
    'title' => 'Supprimer un questionnaire',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ldlm_survey_survey_delete_confirm', 4],
    'access arguments' => ['administer surveys'],
    'file' => 'ldlm_survey.survey.inc',
  ];
  $items['admin/content/survey/campaign/add'] = [
    'title' => 'Ajouter une campagne',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ldlm_survey_campaign_form'],
    'access arguments' => ['administer surveys'],
    'file' => 'ldlm_survey.campaign.inc',
  ];
  $items['admin/content/survey/campaign/%campaign/edit'] = [
    'title' => 'Modifier une campagne',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ldlm_survey_campaign_form', 4],
    'access arguments' => ['administer surveys'],
    'file' => 'ldlm_survey.campaign.inc',
  ];
  $items['admin/content/survey/campaign/%campaign/participants-csv'] = [
    'title' => 'Exporter les participants',
    'page callback' => 'ldlm_survey_export_participants',
    'page arguments' => [4],
    'access arguments' => ['administer surveys'],
    'file' => 'ldlm_survey.campaign.inc',
  ];
  $items['admin/content/survey/campaign/%campaign/delete'] = [
    'title' => 'Supprimer une campagne',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['ldlm_survey_campaign_delete_confirm', 4],
    'access arguments' => ['administer surveys'],
    'file' => 'ldlm_survey.campaign.inc',
  ];

  return $items;
}

/**
 * Implements hook_permission().
 */
function ldlm_survey_permission() {
  return [
    'administer surveys' => [
      'title' => t('Enquêtes de satisfaction'),
      'description' => t('Administrer les enquêtes de satisfaction'),
    ],
  ];
}

/**
 * Implements hook_entity_info().
 */
function ldlm_survey_entity_info() {
  $info = [];

  $info['participant'] = [
    'label' => t('Participant à une enquête'),
    'plural label' => t('Participants à une enquête'),
    'description' => t('Participant à une enquête donnée'),
    'entity keys' => ['id' => 'pid'],
  ];

  $info['campaign'] = [
    'label' => t('Enquête de satisfaction'),
    'plural label' => t('Enquêtes de satisfaction'),
    'description' => t('Enquête de satisfaction (campagne)'),
    'entity keys' => ['id' => 'cid'],
    'entity class' => 'Campaign',
    'controller class' => 'CampaignController',
  ];

  $info['campaign_group'] = [
    'label' => t('Groupe de campagnes de satisfaction.'),
    'plural label' => t('Groupes de campagnes de satisfaction'),
    'description' => t('Groupe de campagnes de satisfaction.'),
    'entity keys' => ['id' => 'cgid'],
    'entity class' => 'CampaignGroup',
    'controller class' => 'CampaignGroupController',
  ];

  $info['survey'] = [
    'label' => t('Questionnaire'),
    'plural label' => t('Questionnaires'),
    'description' => t('Questionnaire.'),
    'entity keys' => ['id' => 'sid'],
    'entity class' => 'Survey',
    'controller class' => 'SurveyController',
  ];

  $info['question_group'] = [
    'label' => t('Groupe de questions'),
    'plural label' => t('Groupes de questions'),
    'description' => t('Groupe (bloc) de questions.'),
    'entity keys' => ['id' => 'qgid'],
    'entity class' => 'QuestionGroup',
    'controller class' => 'QuestionGroupController',
  ];

  $info['question'] = [
    'label' => t('Question'),
    'plural label' => t('Questions'),
    'description' => t('Question.'),
    'entity keys' => ['id' => 'qid'],
  ];

  $info['submitted_data'] = [
    'label' => t('Points pour une question'),
    'plural label' => t('Points pour une question'),
    'description' => t('Données soumises (points) pour une question.'),
    'entity keys' => ['id' => 'smdid'],
  ];

  $info['submission'] = [
    'label' => t("Soumission d'un formulaire"),
    'plural label' => t('Soumissions de formulaires'),
    'description' => t("Soumission d'un formulaire."),
    'entity keys' => ['id' => 'smid'],
  ];

  foreach ($info as $entity => &$definition) {
    $definition += [
      'base table' => 'ldlm_' . $entity,
      'module' => 'ldlm_survey',
      'entity class' => 'Entity',
      'controller class' => 'LdlmSurveyController',
      'views controller class' => 'EntityDefaultViewsController',
      'fieldable' => TRUE,
      'label callback' => 'entity_class_label',
      'uri callback' => 'entity_class_uri',
    ];
  }

  return $info;
}

/**
 * Implements hook_entity_property_info_alter().
 */
function ldlm_survey_entity_property_info_alter(&$info) {
  foreach (ldlm_survey_entity_info() as $entity => $definition) {
    $info[$entity]['properties']['created'] = [
      'label' => t('Date de création'),
      'description' => t('Date de création'),
      'type' => 'date',
      'schema field' => 'created',
    ];
    $info[$entity]['properties']['changed'] = [
      'label' => t('Date de modification'),
      'description' => t('Date de modification'),
      'type' => 'date',
      'schema field' => 'changed',
    ];
  }

  $info['participant']['properties']['answered'] = [
    'label' => t('A répondu'),
    'description' => "Le participant a répondu à l'enquête de satisfaction associée.",
    'type' => 'boolean',
    'schema field' => 'answered',
  ];
  $info['participant']['properties']['cid'] = [
    'label' => t('Campagne associée'),
    'description' => t('Campagne à laquelle le participant est invité à participer.'),
    'type' => 'campaign',
    'schema field' => 'cid',
  ];

  $info['campaign']['properties']['begin'] = [
    'label' => t("Date d'ouverture"),
    'description' => t("Date d'ouverture de la campagne."),
    'type' => 'date',
    'schema field' => 'begin',
  ];
  $info['campaign']['properties']['end'] = [
    'label' => t('Date de fermeture'),
    'description' => t('Date de fermeture de la campagne.'),
    'type' => 'date',
    'schema field' => 'end',
  ];
  $info['campaign']['properties']['status'] = [
    'label' => t('État de la campagne'),
    'description' => t('État de la campagne (programmée, en cours ou fermée).'),
    'type' => 'integer',
    'schema field' => 'status',
    'options list' => 'ldlm_survey_statuses',
  ];
  $info['campaign']['properties']['cgid'] = [
    'label' => t('Groupe de campagnes associé'),
    'description' => t('Groupe de campagnes associé.'),
    'type' => 'campaign_group',
    'schema field' => 'cgid',
  ];

  $info['campaign_group']['properties']['sid'] = [
    'label' => t('Questionnaire associé'),
    'description' => t('Questionnaire associé.'),
    'type' => 'survey',
    'schema field' => 'sid',
  ];

  $info['question_group']['properties']['sid'] = [
    'label' => t('Questionnaire associé'),
    'description' => t('Questionnaire associé à ce groupe de questions.'),
    'type' => 'survey',
    'schema field' => 'sid',
  ];

  $info['question']['properties']['qgid'] = [
    'label' => t('Groupe de questions associé'),
    'description' => t('Groupe de questions associé à cette question.'),
    'type' => 'question_group',
    'schema field' => 'qgid',
  ];

  $info['submitted_data']['properties']['qid'] = [
    'label' => t('Question associée'),
    'description' => t('Question associée à ces données de soumission.'),
    'type' => 'question',
    'schema field' => 'qid',
  ];
  $info['submitted_data']['properties']['smid'] = [
    'label' => t('Soumission associée'),
    'description' => t('Soumission associée à ces données.'),
    'type' => 'submission',
    'schema field' => 'smid',
  ];

  $info['submission']['properties']['sid'] = [
    'label' => t('Questionnaire associé'),
    'description' => t('Questionnaire associé à cette soumission.'),
    'type' => 'survey',
    'schema field' => 'sid',
  ];
}

/**
 * Callback renvoyant les types de statuts pour les campagnes.
 */
function ldlm_survey_statuses() {
  return [
    LDLM_SURVEY_STATUS_SCHEDULED => t('Programmée'),
    LDLM_SURVEY_STATUS_OPEN => t('En cours'),
    LDLM_SURVEY_STATUS_CLOSED => t('Fermée'),
  ];
}

/**
 * Chargement d'une enquête.
 *
 * Nécessaire pour utiliser un motif de substitution dans hook_menu().
 */
function survey_load($sid, $reset = FALSE) {
  $surveys = entity_load('survey', [$sid], [], $reset);
  return reset($surveys);
}

/**
 * Chargement d'une campagne.
 */
function campaign_load($cid, $reset = FALSE) {
  $campaigns = entity_load('campaign', [$cid], [], $reset);
  return reset($campaigns);
}

/**
 * Chargement d'un groupe de campagnes.
 */
function campaign_group_load($cgid, $reset = FALSE) {
  $campaign_groups = entity_load('campaign_group', [$cgid], [], $reset);
  return reset($campaign_groups);
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function ldlm_survey_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  $item = [];

  switch ($root_path) {
    case 'admin/content/survey/survey':
      // Ajouter le lien d'ajout d'un questionnaire au-dessus de la liste.
      $item = menu_get_item('admin/content/survey/survey/add');
      break;

    case 'admin/content/survey/campaign':
      // Ajouter le lien d'ajout d'une campagne au-dessus de la liste.
      $item = menu_get_item('admin/content/survey/campaign/add');
      break;
  }

  if ($item && $item['access']) {
    $data['actions']['output'][] = [
      '#theme' => 'menu_local_action',
      '#link' => $item,
    ];
  }
}

/**
 * Récupérer la liste de tous les questionnaires existants.
 */
function ldlm_survey_get_surveys() {
  $surveys = [];

  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'survey')->execute();
  if (!empty($result['survey'])) {
    $sids = array_keys($result['survey']);
    $surveys = entity_load('survey', $sids);
  }

  return $surveys;
}

/**
 * Liste de tous les questionnaires, pour utilisation dans un formulaire.
 */
function ldlm_survey_get_surveys_as_options() {
  $options = ['_none' => t('- Choisir un questionnaire -')];

  foreach (ldlm_survey_get_surveys() as $sid => $survey) {
    $options[$sid] = $survey->title;
  }

  return $options;
}

/**
 * Récupérer la liste de tous les groupes de campagnes existants.
 */
function ldlm_survey_get_campaign_groups() {
  $campaign_groups = [];

  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'campaign_group')->execute();
  if (!empty($result['campaign_group'])) {
    $cgids = array_keys($result['campaign_group']);
    $campaign_groups = entity_load('campaign_group', $cgids);
  }

  return $campaign_groups;
}

/**
 * Liste de tous les groupes de campagnes, pour utilisation dans un formulaire.
 */
function ldlm_survey_get_campaign_groups_as_options() {
  $options = ['_none' => t('- Choisir un groupe de campagnes -')];

  foreach (ldlm_survey_get_campaign_groups() as $cgid => $campaign_group) {
    $options[$cgid] = $campaign_group->title;
  }

  return $options;
}
